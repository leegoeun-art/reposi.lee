#include <stdio.h>

void decimalToBinary(int n) {
    if (n > 0) {
        decimalToBinary(n / 2); // 재귀 호출: 나머지를 구하기 위해 2로 나눔
        printf("%d", n % 2); // 현재 비트 출력
    }
}

int main() {
    int decimalNumber;

    printf("양의 정수를 입력하세요: ");
    scanf("%d", &decimalNumber);

    if (decimalNumber < 0) {
        printf("양의 정수를 입력해주세요.\n");
    } else if (decimalNumber == 0) {
        printf("2진수: 0\n");
    } else {
        printf("2진수: ");
        decimalToBinary(decimalNumber);
        printf("\n");
    }

    return 0;
}

-=-================
피라미드 피라미드
#include <stdio.h>

int main() {
    int n = 5; // 피라미드의 높이 (줄 수)

    for (int i = 1; i <= n; i++) {
        // 공백 출력
        for (int j = 1; j <= n - i; j++) {
            printf(" ");
        }

        // 별 출력
        for (int k = 1; k <= 2 * i - 1; k++) {
            printf("*");
        }

        printf("\n");
    }

    return 0;
}
======================================
#include <stdio.h>

int isPrime(int n) {
    if (n <= 1) {
        return 0;  // 1 미만의 수는 소수가 아님
    }

    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            return 0;  // n을 나누는 i가 존재하면 소수가 아님
        }
    }

    return 1;  // 위 조건을 모두 통과하면 소수임
}

int main() {
    int number;
    
    printf("Please enter a number: ");
    scanf("%d", &number);

    if (isPrime(number)) {
        printf("It is a prime number.\n");
    } else {
        printf("It is not a prime number.\n");
    }

    return 0;
}
=============
별로 다이아몬드 출력하기.

#include <stdio.h>

int main() {
    int n;
    
    printf("양의 정수를 입력하세요: ");
    scanf("%d", &n);

    if (n <= 0 || n % 2 == 0) {
        printf("양의 홀수를 입력해주세요.\n");
        return 1;
    }

    // 상단 부분 출력
    for (int i = 1; i <= n; i += 2) {
        int spaces = (n - i) / 2;
        int stars = i;
        
        for (int j = 0; j < spaces; j++) {
            printf(" ");
        }
        
        for (int j = 0; j < stars; j++) {
            printf("*");
        }
        
        for (int j = 0; j < spaces; j++) {
            printf(" ");
        }
        
        printf("\n");
    }
    
    // 하단 부분 출력
    for (int i = n - 2; i >= 1; i -= 2) {
        int spaces = (n - i) / 2;
        int stars = i;
        
        for (int j = 0; j < spaces; j++) {
            printf(" ");
        }
        
        for (int j = 0; j < stars; j++) {
            printf("*");
        }
        
        for (int j = 0; j < spaces; j++) {
            printf(" ");
        }
        
        printf("\n");
    }

    return 0;
}



